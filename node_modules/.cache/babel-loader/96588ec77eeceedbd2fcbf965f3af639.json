{"ast":null,"code":"var _jsxFileName = \"/home/matheus/NodeProjects/intellegi/src/App.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport styles from './AppStyle';\nimport routes from './routes';\n\nclass AnyTag extends React.Component {\n  render() {\n    const TagName = this.props.tag;\n    return React.createElement(TagName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass MiniDrawer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.handleDrawerOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleDrawerClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          theme = _this$props.theme;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(AppBar, {\n      position: \"fixed\",\n      className: classNames(classes.appBar, {\n        [classes.appBarShift]: this.state.open\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      disableGutters: !this.state.open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"Open drawer\",\n      onClick: this.handleDrawerOpen,\n      className: classNames(classes.menuButton, {\n        [classes.hide]: this.state.open\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"inherit\",\n      noWrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Intellegi\"), React.createElement(IconButton, {\n      color: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      badgeContent: 4,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(NotificationsIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))))), React.createElement(Drawer, {\n      variant: \"permanent\",\n      className: classNames(classes.drawer, {\n        [classes.drawerOpen]: this.state.open,\n        [classes.drawerClose]: !this.state.open\n      }),\n      classes: {\n        paper: classNames({\n          [classes.drawerOpen]: this.state.open,\n          [classes.drawerClose]: !this.state.open\n        })\n      },\n      open: this.state.open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.toolbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.handleDrawerClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, theme.direction === 'rtl' ? React.createElement(ChevronRightIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }) : React.createElement(ChevronLeftIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, routes.map(route => React.createElement(Link, {\n      to: route.path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(AnyTag, {\n      tag: route.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: route.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, ['All mail', 'Trash', 'Spam'].map((text, index) => React.createElement(ListItem, {\n      button: true,\n      key: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, index % 2 === 0 ? React.createElement(InboxIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }) : React.createElement(MailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }))))), React.createElement(\"main\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.toolbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), routes.map((route, index) => // You can render a <Route> in as many places\n    // as you want in your app. It will render along\n    // with any other <Route>s that also match the URL.\n    // So, a sidebar or breadcrumbs or anything else\n    // that requires you to render multiple things\n    // in multiple places at the same URL is nothing\n    // more than multiple <Route>s.\n    React.createElement(Route, {\n      key: index,\n      path: route.path,\n      component: route.component,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nMiniDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(MiniDrawer);","map":{"version":3,"sources":["/home/matheus/NodeProjects/intellegi/src/App.js"],"names":["React","PropTypes","classNames","BrowserRouter","Router","Route","Link","withStyles","Drawer","AppBar","Toolbar","List","CssBaseline","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","styles","routes","AnyTag","Component","render","TagName","props","tag","MiniDrawer","state","open","handleDrawerOpen","setState","handleDrawerClose","classes","theme","root","appBar","appBarShift","menuButton","hide","drawer","drawerOpen","drawerClose","paper","toolbar","direction","map","route","path","icon","label","text","index","content","component","propTypes","object","isRequired","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nimport styles from './AppStyle';\nimport routes from './routes';\n\nclass AnyTag extends React.Component {\n  render() {\n    const TagName = this.props.tag;\n    return <TagName />\n  }\n}\n\nclass MiniDrawer extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n\n    return (\n        <div className={classes.root}>\n          <Router>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={classNames(classes.appBar, {\n                  [classes.appBarShift]: this.state.open,\n                })}\n            >\n              <Toolbar disableGutters={!this.state.open}>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"Open drawer\"\n                    onClick={this.handleDrawerOpen}\n                    className={classNames(classes.menuButton, {\n                      [classes.hide]: this.state.open,\n                    })}\n                >\n                  <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                  Intellegi\n                </Typography>\n                <IconButton color=\"inherit\">\n                  <Badge badgeContent={4} color=\"secondary\">\n                    <NotificationsIcon />\n                  </Badge>\n                </IconButton>\n              </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={classNames(classes.drawer, {\n                  [classes.drawerOpen]: this.state.open,\n                  [classes.drawerClose]: !this.state.open,\n                })}\n                classes={{\n                  paper: classNames({\n                    [classes.drawerOpen]: this.state.open,\n                    [classes.drawerClose]: !this.state.open,\n                  }),\n                }}\n                open={this.state.open}\n            >\n              <div className={classes.toolbar}>\n                <IconButton onClick={this.handleDrawerClose}>\n                  {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                </IconButton>\n              </div>\n              <Divider />\n              <List>\n                {routes.map( route => (\n                    <Link to={route.path}>\n                      <ListItem button>\n                        <ListItemIcon>\n                          <AnyTag tag={route.icon}/>\n                        </ListItemIcon>\n                        <ListItemText primary={route.label} />\n                      </ListItem>\n                    </Link>\n                ))}\n              </List>\n              <Divider />\n              <List>\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                    <ListItem button key={text}>\n                      <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                      <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n              </List>\n            </Drawer>\n            <main className={classes.content}>\n              <div className={classes.toolbar} />\n              {routes.map((route, index) => (\n                  // You can render a <Route> in as many places\n                  // as you want in your app. It will render along\n                  // with any other <Route>s that also match the URL.\n                  // So, a sidebar or breadcrumbs or anything else\n                  // that requires you to render multiple things\n                  // in multiple places at the same URL is nothing\n                  // more than multiple <Route>s.\n                  <Route\n                      key={index}\n                      path={route.path}\n                      component={route.component}\n                  />\n              ))}\n            </main>\n          </Router>\n        </div>\n    );\n  }\n}\n\nMiniDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(MiniDrawer);"]},"metadata":{},"sourceType":"module"}